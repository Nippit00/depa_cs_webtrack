<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" />
  <link rel="stylesheet" href="/css/styles.css" />
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
  <title>Dashboard</title>
  <link rel="icon" type="image/x-icon" href="../tracktag/img/favi.png" />
</head>

<body class="font-th-sarabun">

  <div id="spinner-container" class="flex fixed inset-0 bg-white bg-opacity-90 z-50 flex-col justify-center items-center">
    <img id="static-image" src="/img/favi.png" alt="Loading..." class="w-24 h-auto mb-5">
    <div id="spinner" class="flex gap-2">
      <div class="dot"></div>
      <div class="dot"></div>
      <div class="dot"></div>
    </div>
  </div>

  <%- include('../component/navbar.ejs') %>

  <div class="w-full">
    <img src="/img/bbj.png" alt="Banner Image" class="w-full" />
  </div>

  <div class="text-center py-5">
    <h1 class="text-4xl">
      ผลรายงานความคืบหน้า<span class="text-[#04b2a1]">เมืองที่ได้รับตราสัญลักษณ์</span>
    </h1>
  </div>

  <%- include('../component/menu.ejs') %>

  <div class="flex flex-col lg:flex-row justify-around mt-10 px-5">
    <div class="">
      <h4 class="flex justify-center mb-5">
        <span class="text-[#04b2a1] text-2xl"><%= data[0].cityName %></span>
      </h4>
      <div class="shadow-md border border-gray-300 rounded-lg py-5 px-24">
        <!-- กราฟ  -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
          <!-- ความคืบหน้าโครงการ -->
          <div class="text-center">
            <h3 class="">ความคืบหน้าของโครงการตามแผน</h3>
            <div class="chart-container">
              <canvas id="progressChart"></canvas>
            </div>
            <div class="chart-container">
              <canvas id="avgprogress"></canvas>
            </div>
          </div>
          <!-- ค่าเฉลี่ยความสำเร็จ -->
          <div class="text-center">
            <h3 class="">ค่าเฉลี่ย % ของความสำเร็จ</h3>
            <div class="chart-container">
              <canvas id="successChart"></canvas>
            </div>
            <div class="chart-container">
              <canvas id="stackedBarChart"></canvas>
            </div>
          </div>
        </div>
        
        <h3 class=" text-center mt-5">ปัญหาและอุปสรรค</h3>
        <div class="chart-container">
          <canvas id="problemsChart"></canvas>
        </div>
      </div>
    </div>
  </div>

  <p class="text-center mt-5">
    *** โปรดอ่าน:
    <span class="text-black">สถานะ <span class="inline-block w-4 h-4 rounded-full bg-red-500"></span></span> หมายถึง ยังไม่ทำการกรอกฟอร์ม -
    <span class="text-black">สถานะ <span class="inline-block w-4 h-4 rounded-full bg-yellow-500"></span></span> หมายถึงฉบับร่าง -
    <span class="text-black">สถานะ <span class="inline-block w-4 h-4 rounded-full bg-green-500"></span></span> หมายถึง ดำเนินการแล้ว ***
  </p>

  <!-- table -->
  <div class="mx-8 my-10 bg-gray-400 p-5 rounded-xl shadow-md border-2 border-teal-400">
    <h6 class="text-white text-2xl font-bold text-center mb-5">หัวข้อโครงการ</h6>
    <div class="flex justify-between space-x-2 flex-wrap">
      <div class="mb-2.5 text-center" onclick="show(10)">
        <img src="/img/favi.png" alt="Image 0" id="1" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">โครงสร้างพื้น<br>ฐานกายภาพ</h5>
      </div>
      <div class="mb-2.5 text-center" onclick="show(10)">
        <img src="/img/favi.png" alt="Image 0" id="1" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">โครงสร้างพื้น<br>ฐานดิจิตอล</h5>
      </div>
      <div class="mb-2.5 text-center" onclick="show(1)">
        <img src="/img/cdp.png" alt="Image 0" id="1" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">CDP</h5>
      </div>
      <div class="mb-2.5 text-center" onclick="show(2)">
        <img src="/img/s1.png" alt="Image 0" id="2" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">Smart<br>Environment</h5>
      </div>
      <div class="mb-2.5 text-center" onclick="show(3)">
        <img src="/img/se.png" alt="Image 0" id="3" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">Smart<br>Energy</h5>
      </div>
      <div class="mb-2.5 text-center" onclick="show(4)">
        <img src="/img/sec.png" alt="Image 0" id="4" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">Smart<br>Economy</h5>
      </div>
      <div class="mb-2.5 text-center" onclick="show(5)">
        <img src="/img/sm.png" alt="Image 0" id="5" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">Smart<br>Mobility</h5>
      </div>
      <div class="mb-2.5 text-center" onclick="show(6)">
        <img src="/img/sco.png" alt="Image 0" id="6" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">Smart<br>Governance</h5>
      </div>
      <div class="mb-2.5 text-center" onclick="show(7)">
        <img src="/img/sp.png" alt="Image 0" id="7" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">Smart<br>People</h5>
      </div>
      <div class="mb-2.5 text-center" onclick="show(8)">
        <img src="/img/sl.png" alt="Image 0" id="8" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">Smart<br>Living</h5>
      </div>
      <div class="mb-2.5 text-center" onclick="show(9)">
        <img src="/img/all01.png" alt="Image 0" id="9" class="max-w-full h-auto w-20 rounded-full border-2 border-teal-400 box-border p-2.5 m-2.5 bg-white shadow-lg transition-transform duration-300 ease-in-out hover:scale-125 hover:shadow-xl" />
        <h5 class="mt-1.5 text-sm text-white">All</h5>
      </div>
    </div>
    <table class="w-full border-collapse bg-white shadow-lg text-center mt-5">
      <thead>
        <tr>
          <th class="bg-teal-400 p-2.5 text-white">Project</th>
          <th class="bg-teal-400 p-2.5 text-white">Percent ความสำเร็จ</th>
          <th class="bg-teal-400 p-2.5 text-white">Percent ความคืบหน้า</th>
          <th class="bg-teal-400 p-2.5 text-white">รอบติดตาม 12 เดือน</th>
          <th class="bg-teal-400 p-2.5 text-white">รอบติดตาม 24 เดือน</th>
          <th class="bg-teal-400 p-2.5 text-white">รอบติดตามความคืบหน้าเพื่อต่อตราสัญลักษณ์</th>
        </tr>
      </thead>
      <tbody id="body-table">
        <tr>
          <td class="p-2.5">โครงสร้างพื้นฐานกายภาพ</td>
          <td class="p-2.5">
            <div class="flex items-center h-2.5 bg-teal-400 text-white p-2.5 rounded-full" style="width: 50%">50%</div>
          </td>
          <td class="p-2.5">
            <div class="flex items-center h-5 bg-yellow-400 text-white p-2.5 rounded-full" style="width: 50%">50%</div>
          </td>
          <td class="p-2.5">-</td>
          <td class="p-2.5">-</td>
          <td class="p-2.5"><%=solutionInfo[0].smartKey%></td>
        </tr>
      </tbody>
    </table>
  </div>

  <script>
    window.onload = function () {
      document.getElementById('spinner-container').style.display = 'none';
    };

    window.addEventListener('DOMContentLoaded', (event) => {
      document.getElementById('spinner-container').style.display = 'flex';
    });

    function show(index) {
      // Remove active class from all images
      const images = document.querySelectorAll('img');
      images.forEach(img => {
        img.classList.remove('active');
      });
      const solutionInfo = <%- solutionInfo %>;

      function calculateAverageSuccess(dataArray, smartKey) {
        let totalSuccess = 0;
        let count = 0;

        dataArray.forEach((data) => {
          if (data.smartKey === smartKey) {
            totalSuccess += data.Progress === 100 ? 1 : 0;
            count++;
          }
        });

        return count > 0 ? totalSuccess / count : 0;
      }

      function calculateAverageProgress(dataArray, smartKey) {
        let totalProgress = 0;
        let count = 0;

        dataArray.forEach((data) => {
          if (data.smartKey === smartKey) {
            totalProgress += data.Progress / 100;
            count++;
          }
        });

        return count > 0 ? totalProgress / count : 0;
      }

      // Add active class to the clicked image
      const clickedImage = document.getElementById(index.toString());
      clickedImage.classList.add('active');

      const bodyTable = document.getElementById("body-table");
      let html = "";

      switch (index) {
        case 1:
          bodyTable.innerHTML = "";
          solutionInfo.forEach((data) => {
            if (data.smartKey === "CDP") {
              html += `
                        <tr>
                            <td class="p-5">${data.solutionID.slice(4)} ${data.solutionName}</td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                        </tr>`;
            }
          });

          html += `<tr>
                <td>รวม</td>
                <td></td>
                <td></td>
                <td></td>
            </tr>`;
          break;
        case 2:
          bodyTable.innerHTML = "";
          solutionInfo.forEach((data) => {
            if (data.smartKey === "ENV") {
              const status = data.Progress === 100 ? "สำเร็จ" : "ไม่สำเร็จ";
              html += `
                        <tr>
                            <td class="p-5">${data.solutionID.slice(4)} ${data.solutionName}</td>
                            <td class="p-5">${status}</td>
                            <td class="p-5">${data.Progress}%</td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                        </tr>`;
            }
          });
          const averageProgressEnv = calculateAverageProgress(solutionInfo, "ENV");
          const averageSuccessEnv = calculateAverageSuccess(solutionInfo, "ENV");
          html += `<tr>
                <td>รวม</td>
                <td class="p-5">${(averageSuccessEnv * 100).toFixed(0)}%</td>
                <td class="p-5">${(averageProgressEnv * 100).toFixed(0)}%</td>
                <td></td>
            </tr>`;
          break;
        case 3:
          bodyTable.innerHTML = "";
          solutionInfo.forEach((data) => {
            if (data.smartKey === "ENE") {
              const status = data.Progress === 100 ? "สำเร็จ" : "ไม่สำเร็จ";
              html += `
                        <tr>
                            <td class="p-5">${data.solutionID.slice(4)} ${data.solutionName}</td>
                            <td class="p-5">${status}</td>
                            <td class="p-5">${data.Progress}</td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                        </tr>`;
            }
          });
          const averageProgressEne = calculateAverageProgress(solutionInfo, "ENE");
          const averageSuccessEne = calculateAverageSuccess(solutionInfo, "ENE");
          html += `<tr>
                <td>รวม</td>
                <td class="p-5">${(averageSuccessEne * 100).toFixed(0)}%</td>
                <td class="p-5">${(averageProgressEne * 100).toFixed(0)}%</td>
                <td></td>
            </tr>`;
          break;
        case 4:
          bodyTable.innerHTML = "";
          solutionInfo.forEach((data) => {
            if (data.smartKey === "ECO") {
              const status = data.Progress === 100 ? "สำเร็จ" : "ไม่สำเร็จ";
              html += `
                        <tr>
                            <td class="p-5">${data.solutionID.slice(4)} ${data.solutionName}</td>
                            <td class="p-5">${status}</td>
                            <td class="p-5">${data.Progress}</td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                        </tr>`;
            }
          });
          const averageProgressEco = calculateAverageProgress(solutionInfo, "ECO");
          const averageSuccessEco = calculateAverageSuccess(solutionInfo, "ECO");
          html += `<tr>
                <td>รวม</td>
                <td class="p-5">${(averageSuccessEco * 100).toFixed(0)}%</td>
                <td class="p-5">${(averageProgressEco * 100).toFixed(0)}%</td>
                <td></td>
            </tr>`;
          break;
        case 5:
          bodyTable.innerHTML = "";
          solutionInfo.forEach((data) => {
            if (data.smartKey === "MOB") {
              const status = data.Progress === 100 ? "สำเร็จ" : "ไม่สำเร็จ";
              html += `
                        <tr>
                            <td class="p-5">${data.solutionID.slice(4)} ${data.solutionName}</td>
                            <td class="p-5">${status}</td>
                            <td class="p-5">${data.Progress}</td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                        </tr>`;
            }
          });
          const averageProgressMob = calculateAverageProgress(solutionInfo, "MOB");
          const averageSuccessMob = calculateAverageSuccess(solutionInfo, "MOB");
          html += `<tr>
                <td>รวม</td>
                <td class="p-5">${(averageSuccessMob * 100).toFixed(0)}%</td>
                <td class="p-5">${(averageProgressMob * 100).toFixed(0)}%</td>
                <td></td>
            </tr>`;
          break;
        case 6:
          bodyTable.innerHTML = "";
          solutionInfo.forEach((data) => {
            if (data.smartKey === "GOV") {
              const status = data.Progress === 100 ? "สำเร็จ" : "ไม่สำเร็จ";
              html += `
                        <tr>
                            <td class="p-5">${data.solutionID.slice(4)} ${data.solutionName}</td>
                            <td class="p-5">${status}</td>
                            <td class="p-5">${data.Progress}</td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                        </tr>`;
            }
          });
          const averageProgressGov = calculateAverageProgress(solutionInfo, "GOV");
          const averageSuccessGov = calculateAverageSuccess(solutionInfo, "GOV");
          html += `<tr>
                <td>รวม</td>
                <td class="p-5">${(averageSuccessGov * 100).toFixed(0)}%</td>
                <td class="p-5">${(averageProgressGov * 100).toFixed(0)}%</td>
                <td></td>
            </tr>`;
          break;
        case 7:
          bodyTable.innerHTML = "";
          solutionInfo.forEach((data) => {
            if (data.smartKey === "PEO") {
              const status = data.Progress === 100 ? "สำเร็จ" : "ไม่สำเร็จ";
              html += `
                        <tr>
                            <td class="p-5">${data.solutionID.slice(4)} ${data.solutionName}</td>
                            <td class="p-5">${status}</td>
                            <td class="p-5">${data.Progress}</td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                        </tr>`;
            }
          });
          const averageProgressPeo = calculateAverageProgress(solutionInfo, "PEO");
          const averageSuccessPeo = calculateAverageSuccess(solutionInfo, "PEO");
          html += `<tr>
                <td>รวม</td>
                <td class="p-5">${(averageSuccessPeo * 100).toFixed(0)}%</td>
                <td class="p-5">${(averageProgressPeo * 100).toFixed(0)}%</td>
                <td></td>
            </tr>`;
          break;
        case 8:
          bodyTable.innerHTML = "";
          solutionInfo.forEach((data) => {
            if (data.smartKey === "LIV") {
              const status = data.Progress === 100 ? "สำเร็จ" : "ไม่สำเร็จ";
              html += `
                        <tr>
                            <td class="p-5">${data.solutionID.slice(4)} ${data.solutionName}</td>
                            <td class="p-5">${status}</td>
                            <td class="p-5">${data.Progress}</td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                        </tr>`;
            }
          });
          const averageProgressLiv = calculateAverageProgress(solutionInfo, "LIV");
          const averageSuccessLiv = calculateAverageSuccess(solutionInfo, "LIV");
          html += `<tr>
                <td>รวม</td>
                <td class="p-5">${(averageSuccessLiv * 100).toFixed(0)}%</td>
                <td class="p-5">${(averageProgressLiv * 100).toFixed(0)}%</td>
                <td></td>
            </tr>`;
          break;
        case 9:
          bodyTable.innerHTML = "";
          solutionInfo.forEach((data) => {
            html += `
                        <tr>
                            <td class="p-5">${data.solutionID.slice(4)} ${data.solutionName}</td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                        </tr>`;
          });
          html += `<tr>
                <td>รวม</td>
                <td></td>
                <td></td>
                <td></td>
            </tr>`;
          break;
        case 10:
          bodyTable.innerHTML = "";
          solutionInfo.forEach((data) => {
            if (data.smartKey === "CDP") {
              const status = data.Progress === 100 ? "สำเร็จ" : "ไม่สำเร็จ";
              html += `
                        <tr>
                            <td class="p-5">${data.solutionID.slice(4)} ${data.solutionName}</td>
                            <td class="p-5">${status}</td>
                            <td class="p-5">${data.Progress}</td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                            <td class="p-5"></td>
                        </tr>`;
            }
          });
          const averageProgressCdp = calculateAverageProgress(solutionInfo, "CDP");
          const averageSuccessCdp = calculateAverageSuccess(solutionInfo, "CDP");
          html += `<tr>
                <td>รวม</td>
                <td class="p-5">${(averageSuccessCdp * 100).toFixed(0)}%</td>
                <td class="p-5">${(averageProgressCdp * 100).toFixed(0)}%</td>
                <td></td>
            </tr>`;
          break;
        default:
          console.log(index)
          break;
      }
      bodyTable.innerHTML = html;
    }

    // Add the CSS class for the active state
    const style = document.createElement('style');
    style.innerHTML = `
        .active {
          transform: scale(1.25);
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }
        `;
    document.head.appendChild(style);
  </script>

  <script>
    const progressCtx = document.getElementById('progressChart').getContext('2d');
    const rounded = <%- rounded %>;
    let currentRound = Object.keys(rounded).length;
    let initialRound = rounded[currentRound];

    const progressChart = new Chart(progressCtx, {
      type: 'doughnut',
      data: {
        labels: ['ยังไม่ดำเนินการ', 'ดำเนินการแล้ว'],
        datasets: [{
          data: [100 - initialRound.progress, initialRound.progress],
          backgroundColor: ['#eeeeee', '#00f0d8'],
          borderWidth: 6,
          borderColor: '#ffffff'
        }]
      },
      options: {
        plugins: {
          datalabels: {
            formatter: (value, context) => context.dataIndex === 1 ? `${value}%` : '',
            color: '#fff',
            font: {
              weight: 'bold',
              size: 16
            },
            align: 'center',
            anchor: 'center'
          },
          tooltip: {
            callbacks: {
              label: tooltipItem => `${tooltipItem.label}: ${tooltipItem.raw}%`
            }
          }
        },
        centerText: {
          display: true,
          text: `${initialRound.progress}%`
        },
        cutout: '50%',
        maintainAspectRatio: false,
      },
      plugins: [{
        id: 'centerText',
        beforeDraw: chart => {
          if (chart.options.centerText.display) {
            const ctx = chart.ctx;
            const centerConfig = chart.options.centerText;
            const fontSize = (chart.height / 180).toFixed(2);
            ctx.font = `bold ${fontSize}em sans-serif`;
            ctx.textBaseline = 'middle';
            const text = centerConfig.text;
            const textX = Math.round((chart.width - ctx.measureText(text).width) / 2);
            const textY = chart.height / 2;
            ctx.fillStyle = '#000';
            ctx.fillText(text, textX, textY);
          }
        }
      }]
    });

    // กราฟค่าเฉลี่ยความสำเร็จ
    const successCtx = document.getElementById('successChart').getContext('2d');
    const totalProjects = initialRound.count;
    const successProjects = initialRound.success.reduce((a, b) => a + b, 0);
    const unsuccessfulProjects = totalProjects - successProjects;

    const successChart = new Chart(successCtx, {
      type: 'doughnut',
      data: {
        labels: ['ยังไม่สำเร็จ', 'สำเร็จแล้ว'],
        datasets: [{
          data: [(unsuccessfulProjects / totalProjects) * 100, (successProjects / totalProjects) * 100],
          backgroundColor: ['#eeeeee', '#FFCE56'],
          borderWidth: 6,
          borderColor: '#ffffff'
        }]
      },
      options: {
        plugins: {
          datalabels: {
            formatter: (value) => `${value.toFixed(0)}%`,
            color: '#fff',
            font: {
              weight: 'bold'
            }
          },
          tooltip: {
            callbacks: {
              label: (tooltipItem) => `${tooltipItem.label}: ${tooltipItem.raw.toFixed(0)}%`
            }
          }
        },
        cutout: '50%',
        maintainAspectRatio: false,
        centerText: {
          display: true,
          text: `${((successProjects / totalProjects) * 100).toFixed(0)}%`
        }
      },
      plugins: [{
        id: 'centerText',
        beforeDraw: (chart) => {
          if (chart.options.centerText.display) {
            const ctx = chart.ctx;
            const centerConfig = chart.options.centerText;
            const fontSize = (chart.height / 180).toFixed(2);
            ctx.font = `bold ${fontSize}em sans-serif`;
            ctx.textBaseline = 'middle';
            const text = centerConfig.text;
            const textX = Math.round((chart.width - ctx.measureText(text).width) / 2);
            const textY = chart.height / 2;
            ctx.fillStyle = '#000';
            ctx.fillText(text, textX, textY);
          }
        }
      }]
    });

    const problemsCtx = document.getElementById('problemsChart').getContext('2d');
    const problemData = initialRound.problem;

    const problemsChart = new Chart(problemsCtx, {
      type: 'bar',
      data: {
        labels: problemData.map(p => p.problem),
        datasets: [{
          label: '% ของปัญหา',
          data: problemData.map(problem => problem.percentage),
          backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']
        }]
      },
      options: {
        plugins: {
          legend: {
            display: false // This will hide the legend
          },
          datalabels: {
            display: false // This will hide the data labels
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            max: 100,
            ticks: {
              callback: (value) => `${value}%`
            }
          }
        }
      }
    });

    const stackedBarCtx = document.getElementById('stackedBarChart').getContext('2d');
    const stackedBarChart = new Chart(stackedBarCtx, {
      type: 'bar',
      data: {
        labels: Object.keys(initialRound.smartkeycount),
        datasets: [{
          label: 'โครงการที่สำเร็จแล้ว',
          data: Object.values(initialRound.success),
          backgroundColor: '#FFCE56'
        },
        {
          label: 'โครงการที่ยังไม่สำเร็จ',
          data: Object.values(initialRound.unsuccess),
          backgroundColor: '#cccccc'
        }
        ]
      },
      options: {
        scales: {
          x: {
            stacked: true
          },
          y: {
            stacked: true,
            beginAtZero: true
          }
        },
        plugins: {
          legend: {
            display: true,
            position: 'bottom'
          },
          tooltip: {
            callbacks: {
              label: tooltipItem => `${tooltipItem.dataset.label}: ${tooltipItem.raw}`
            }
          },
          datalabels: {
            display: true,
            color: '#000',
            font: {
              weight: 'bold'
            },
            formatter: (value, context) => value === 0 ? null : value
          }
        }
      },
      plugins: [ChartDataLabels]
    });

    const avgProgressCtx = document.getElementById('avgprogress').getContext('2d');
    const avgProgressChart = new Chart(avgProgressCtx, {
      type: 'bar',
      data: {
        labels: Object.keys(initialRound.averageProgressPerSmart),
        datasets: [{
          label: 'ค่าเฉลี่ยของความคืบหน้า (%)',
          data: Object.values(initialRound.averageProgressPerSmart),
          backgroundColor: '#00f0d8'
        }]
      },
      options: {
        scales: {
          x: {
            stacked: true
          },
          y: {
            beginAtZero: true,
            max: 100,
            ticks: {
              callback: value => `${value}%`
            }
          }
        },
        plugins: {
          legend: {
            display: true,
            position: 'bottom'
          },
          tooltip: {
            callbacks: {
              label: tooltipItem => `${tooltipItem.dataset.label}: ${tooltipItem.raw}%`
            }
          },
          datalabels: {
            display: true,
            color: '#000',
            font: {
              weight: 'bold'
            },
            formatter: (value, context) => value === 0 ? null : `${value}%`
          }
        }
      },
      plugins: [ChartDataLabels]
    });
  </script>

  <%- include('../component/footer.ejs') %>
</body>

</html>
