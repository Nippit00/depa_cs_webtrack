<!DOCTYPE html>
<html lang="en">
<head>
  <% include('../include/ad-head.ejs') %>
  <title>Admin - <%= pageTitle %></title>
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:wdth,wght@62.5..100,100..900&display=swap" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
  <style>
    * {
      font-family: "Noto Sans Thai", sans-serif;
      font-optical-sizing: auto;
      font-weight: 400;
      font-style: normal;
      font-variation-settings: "wdth" 100;
    }

    .card {
      background: #fff;
      border-radius: 8px;
      padding: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
      margin-bottom: 24px;
    }

    .section-title {
      font-size: 1.25rem;
      font-weight: normal;
      margin-bottom: 16px;
    }

    .chart-container {
      width: 100%;
      height: 200px;
      display: flex;
      justify-content: center;
    }
  </style>
</head>

<body class="bg-teal-500">
  <%- include('../include/ad-navbar.ejs') %>
  <div class="container mx-auto p-6 bg-white mt-6 rounded-lg shadow-lg">
    <div class="flex flex-col lg:flex-row lg:space-x-6">
      <div class="lg:w-1/2">
        <h1 class="text-3xl font-medium mb-4">ข้อมูลเมือง <%= cityData.cityName %></h1>
        <p class="text-xl mb-2">จังหวัด : <%= cityData.province %></p>
        <p class="text-xl mb-2">ผู้พัฒนา : <%= cityData.developer %></p>
        <p class="text-xl mb-2">ผู้บริหาร : <%= cityData.executive %></p>
        <div class="flex justify-start space-x-4 mt-6">
          <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" onclick="GoEditPage()">
            แก้ไขข้อมูลจังหวัด
          </button>
          <button class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded" onclick="GoAddSolution()">
            เพิ่ม Solution
          </button>
        </div>
      </div>
      <div class="lg:w-1/2 flex justify-center items-center">
        <img src="/cityPic/<%= cityData.cityID %>.png">
      </div>
    </div>
    <div class="container mx-auto p-6 bg-gray-200">
      <div class="card">
        <h2 class="text-2xl font-bold mb-4"><%= cityData.cityName %></h2>
        <p class="text-md mb-2">ได้รับตราสัญลักษณ: <%= cityData.date.toLocaleDateString('th-TH', {
          year: 'numeric',
          month: 'long',
          day: 'numeric',
          weekday: 'long',
        }) %></p>
        <p class="text-md mb-2">
          ประเภท: <%= new Date() - new Date(cityData.date) < 6 * 30 * 24 * 60 * 60 * 1000 ? 'เมืองใหม่' : 'เมืองเก่า' %>
        </p>
      </div>
      <!-- Dashboard -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
        <!-- บริการเมืองอัจฉริยะ -->
        <% const initialRound = JSON.parse(rounded)[1]; %>
        <div class="card lg:col-span-1">
          <h3 class="section-title">บริการเมืองอัจฉริยะ : <span style="color: #2c7f97;"><%= Object.keys(initialRound.smartkeycount).length %></span>
            Smarts <span style="color: #d0a519;"><%= initialRound.count %></span> โครงการ</h3>
          <div class="grid grid-cols-2 gap-4">
            <div class="flex items-center justify-center space-x-2">
              <img src="/img/lo01.png" alt="ENV Image" style="width: 70px; height: 70px;">
              <span>ENV (<%= initialRound.smartkeycount.ENV ?? '0' %>)</span>
            </div>
            <div class="flex items-center justify-center space-x-2">
              <img src="/img/lo04.png" alt="ENE Image" style="width: 70px; height: 70px;">
              <span>ENE (<%= initialRound.smartkeycount.ENE ?? '0' %>)</span>
            </div>
            <div class="flex items-center justify-center space-x-2">
              <img src="/img/lo05.png" alt="ECO Image" style="width: 70px; height: 70px;">
              <span>ECO (<%= initialRound.smartkeycount.ECO ?? '0' %>)</span>
            </div>
            <div class="flex items-center justify-center space-x-2">
              <img src="/img/lo02.png" alt="GOV Image" style="width: 70px; height: 70px;">
              <span>GOV (<%= initialRound.smartkeycount.GOV ?? '0' %>)</span>
            </div>
            <div class="flex items-center justify-center space-x-2">
              <img src="/img/lo06.png" alt="LIV Image" style="width: 70px; height: 70px;">
              <span>LIV (<%= initialRound.smartkeycount.LIV ?? '0' %>)</span>
            </div>
            <div class="flex items-center justify-center space-x-2">
              <img src="/img/lo07.png" alt="PEO Image" style="width: 70px; height: 70px;">
              <span>PEO (<%= initialRound.smartkeycount.PEO ?? '0' %>)</span>
            </div>
            <div class="flex items-center justify-center space-x-2">
              <img src="/img/lo03.png" alt="MOB Image" style="width: 70px; height: 70px;">
              <span>MOB (<%= initialRound.smartkeycount.MOB ?? '0' %>)</span>
            </div>
            <div class="flex items-center justify-center space-x-2">
              <img style="width: 70px; height: 70px;" src="/img/favi.png" alt="CDP Image" class="w-15 h-15">
              <span>CDP (<%= initialRound.smartkeycount.CDP ?? '0' %>)</span>
            </div>
          </div>
        </div>
        <!-- กราฟ -->
        <div class="card lg:col-span-2">
          <div class="grid grid-cols-2 gap-4">
            <!-- ความคืบหน้าโครงการ -->
            <div class="text-center">
              <h3 class="section-title">ความคืบหน้าของโครงการตามแผน</h3>
              <div class="chart-container">
                <canvas id="progressChart"></canvas>
              </div>
              <div class="chart-container">
                <canvas id="avgprogress"></canvas>
              </div>
            </div>
            <!-- ค่าเฉลี่ยความสำเร็จ -->
            <div class="text-center">
              <h3 class="section-title">ค่าเฉลี่ย % ความสำเร็จของ Smart Solutions</h3>
              <div class="chart-container">
                <canvas id="successChart"></canvas>
              </div>
              <div class="chart-container">
                <canvas id="stackedBarChart"></canvas>
              </div>
            </div>
          </div>
        </div>
      </div>
      <!-- ปัญหาและอุปสรรค -->
      <div class="card">
        <h3 class="section-title" style="text-align: center;">ปัญหาและอุปสรรค</h3>
        <div class="chart-container">
          <canvas id="problemsChart"></canvas>
        </div>
      </div>
      <!-- โครงการที่สำเร็จ -->
      <div class="card">
        <h3 class="section-title">โครงการที่สำเร็จ</h3>
        <ul class="list-disc pl-5 space-y-2">
          <% initialRound.complete.forEach(item => { %>
          <li><%= item %></li>
          <% }) %>
        </ul>
      </div>
      <div class="flex justify-between mt-4">
        <button class="bg-blue-400 hover:bg-blue-300 text-gray-800 font-bold py-2 px-4 rounded" onclick="round(-1)">
          Back
        </button>
        <button class="bg-blue-400 hover:bg-blue-300 text-gray-800 font-bold py-2 px-4 rounded" onclick="round(1)">
          Next
        </button>
      </div>
    </div>
    <div class="mt-6">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-yellow-300 rounded-xl">
          <tr>
            <th class="px-4 py-2 text-left text-sm font-medium text-gray-900">โครงสร้าง / Smart</th>
            <th class="px-4 py-2 text-left text-sm font-medium text-gray-900">Project</th>
            <th class="px-4 py-2 text-left text-sm font-medium text-gray-900">Actions</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% solution.forEach((smartItem, index) => { %>
          <% if (index !== 0) { %>
          <tr class="hover:bg-gray-50">
            <td class="px-4 py-2">
              <%= smartItem.smart === 'City Data Platform' ? smartItem.smart : 'smart ' + smartItem.smart %>
            </td>
            <td class="px-4 py-2">
              <a href="" class="text-blue-500 h/admin/kpi/<%=smartItem.solutionID%>ne"><%= smartItem.solutionName %></a>
            </td>
            <td class="px-4 py-2">
              <div class="flex space-x-2">
                <a href="/admin/kpi/<%=smartItem.solutionID%>" class="bg-green-500 px-4 py-2 rounded hover:bg-yellow-500">แก้ไข KPI</a>
                <a href="/admin/solution/edit/<%=smartItem.solutionID %>" class="bg-yellow-300 px-4 py-2 rounded hover:bg-yellow-500">แก้ไข Solution</a>
                <a href="/admin/solution/delete/<%=smartItem.solutionID %>/<%=smartItem.cityID %>" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-500">ลบ</a>
              </div>
            </td>
          </tr>
          <% } %>
          <% }); %>
        </tbody>
      </table>
    </div>
  </div>

  <%- include('../include/ad-footer.ejs') %>
  <script>
    function GoEditPage() {
      const cityID = "<%= cityData.cityID %>";
      window.location.href = `/admin/city/edit/${cityID}`;
    }

    function GoAddSolution() {
      const cityID = "<%= cityData.cityID %>";
      window.location.href = `/admin/solution/add/${cityID}`;
    }
  </script>
  <script>
    function handleSearch() {
      const searchText = document.getElementById("searchInput").value.toLowerCase();
      const rows = document.querySelectorAll("table tbody tr");
      rows.forEach((row) => {
        const cells = row.querySelectorAll("td");
        let found = false;
        cells.forEach((cell) => {
          if (cell.textContent.toLowerCase().includes(searchText)) {
            found = true;
          }
        });
        row.style.display = found ? "" : "none";
      });
    }
    document.getElementById("searchInput").addEventListener("keyup", function() {
      handleSearch();
    });

    const rounded = <%- rounded %>;

    let currentRound = 1;
    let initialRound = rounded[currentRound];

    function round(direction) {
      currentRound += direction;
      if (currentRound < 1) currentRound = 1;
      if (currentRound > Object.keys(rounded).length) currentRound = Object.keys(rounded).length;

      const data = rounded[currentRound];

      // Update the progress chart
      progressChart.data.datasets[0].data = [100 - data.progress, data.progress];
      progressChart.options.centerText.text = `${data.progress}%`;
      progressChart.update();

      // Update the success chart
      successChart.data.datasets[0].data = [data.count - data.complete.length, data.complete.length];
      successChart.options.centerText.text = `${((data.complete.length / data.count) * 100).toFixed(0)}%`;
      successChart.update();

      // Update the problem chart
      problemsChart.data.labels = data.problem;
      problemsChart.data.datasets[0].data = data.problem.map(problem => problem.length); // Example transformation
      problemsChart.update();

      // Update the stacked bar chart
      stackedBarChart.data.datasets[0].data = Object.values(data.smartkeycount);
      stackedBarChart.data.datasets[1].data = Object.values(data.smartkeycount).map((value, index) => value - data.success[index]);
      stackedBarChart.update();

      // Update the average progress chart
      avgProgressChart.data.datasets[0].data = Object.values(data.averageProgressPreSmart);
      avgProgressChart.update();
    }

    // กราฟความคืบหน้าโครงการ
    const progressCtx = document.getElementById('progressChart').getContext('2d');
    const progressChart = new Chart(progressCtx, {
      type: 'doughnut',
      data: {
        labels: ['ยังไม่ดำเนินการ', 'ดำเนินการแล้ว'],
        datasets: [{
          data: [100 - initialRound.progress, initialRound.progress],
          backgroundColor: ['#eeeeee', '#00f0d8'],
          borderWidth: 6,
          borderColor: '#ffffff'
        }]
      },
      options: {
        plugins: {
          datalabels: {
            formatter: (value, context) => context.dataIndex === 1 ? `${value}%` : '',
            color: '#fff',
            font: { weight: 'bold', size: 16 },
            align: 'center',
            anchor: 'center'
          },
          tooltip: {
            callbacks: { label: tooltipItem => `${tooltipItem.label}: ${tooltipItem.raw}%` }
          }
        },
        centerText: { display: true, text: `${initialRound.progress}%` },
        cutout: '50%',
        maintainAspectRatio: false,
      },
      plugins: [{
        id: 'centerText',
        beforeDraw: chart => {
          if (chart.options.centerText.display) {
            const ctx = chart.ctx;
            const centerConfig = chart.options.centerText;
            const fontSize = (chart.height / 114).toFixed(2);
            ctx.font = `bold ${fontSize}em sans-serif`;
            ctx.textBaseline = 'middle';
            const text = centerConfig.text;
            const textX = Math.round((chart.width - ctx.measureText(text).width) / 2);
            const textY = chart.height / 2;
            ctx.fillStyle = '#000';
            ctx.fillText(text, textX, textY);
          }
        }
      }]
    });

    // กราฟค่าเฉลี่ยความสำเร็จ
    const successCtx = document.getElementById('successChart').getContext('2d');
    const successChart = new Chart(successCtx, {
      type: 'doughnut',
      data: {
        labels: ['ยังไม่สำเร็จ', 'สำเร็จแล้ว'],
        datasets: [{
          data: [initialRound.count - initialRound.success, initialRound.success],
          backgroundColor: ['#eeeeee', '#FFCE56'],
          borderWidth: 6,
          borderColor: '#ffffff'
        }]
      },
      options: {
        plugins: {
          datalabels: {
            formatter: (value, context) => {
              const total = context.chart.data.datasets[0].data.reduce((a, b) => a + b, 0);
              return `${(value / total * 100).toFixed(0)}%`;
            },
            color: '#fff',
            font: { weight: 'bold' }
          },
          tooltip: {
            callbacks: { label: tooltipItem => `${tooltipItem.label}: ${tooltipItem.raw}` }
          }
        },
        cutout: '50%',
        maintainAspectRatio: false,
        centerText: { display: true, text: `${(initialRound.complete.length / initialRound.count * 100).toFixed(0)}%` }
      },
      plugins: [{
        id: 'centerText',
        beforeDraw: chart => {
          if (chart.options.centerText.display) {
            const ctx = chart.ctx;
            const centerConfig = chart.options.centerText;
            const fontSize = (chart.height / 114).toFixed(2);
            ctx.font = `bold ${fontSize}em sans-serif`;
            ctx.textBaseline = 'middle';
            const text = centerConfig.text;
            const textX = Math.round((chart.width - ctx.measureText(text).width) / 2);
            const textY = chart.height / 2;
            ctx.fillStyle = '#000';
            ctx.fillText(text, textX, textY);
          }
        }
      }]
    });

    document.addEventListener('DOMContentLoaded', function() {
      const problemsCtx = document.getElementById('problemsChart').getContext('2d');
      const problemData = initialRound.problem;
      const problemsChart = new Chart(problemsCtx, {
        type: 'bar',
        data: {
          labels: problemData,
          datasets: [{
            label: '% ของปัญหา',
            data: problemData.map(problem => problem.percentage),
            backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']
          }]
        },
        options: {
          plugins: {
            datalabels: {
              anchor: 'end',
              align: 'top',
              formatter: value => `${value}%`,
              color: '#000',
              font: { weight: 'bold' }
            }
          },
          scales: {
            y: {
              beginAtZero: true,
              max: 100,
              ticks: { callback: value => `${value}%` }
            }
          }
        }
      });
    });

    const stackedBarCtx = document.getElementById('stackedBarChart').getContext('2d');
    const stackedBarChart = new Chart(stackedBarCtx, {
      type: 'bar',
      data: {
        labels: Object.keys(initialRound.smartkeycount),
        datasets: [{
            label: 'โครงการที่สำเร็จแล้ว',
            data: Object.values(initialRound.smartkeycount),
            backgroundColor: '#FFCE56'
          },
          {
            label: 'โครงการที่ยังไม่สำเร็จ',
            data: Object.values(initialRound.smartkeycount).map((value, index) => value - initialRound.success[index]),
            backgroundColor: '#cccccc'
          }
        ]
      },
      options: {
        scales: {
          x: { stacked: true },
          y: { stacked: true, beginAtZero: true }
        },
        plugins: {
          legend: { display: true, position: 'bottom' },
          tooltip: {
            callbacks: { label: tooltipItem => `${tooltipItem.dataset.label}: ${tooltipItem.raw}` }
          },
          datalabels: {
            display: true,
            color: '#000',
            font: { weight: 'bold' },
            formatter: (value, context) => value === 0 ? null : value
          }
        }
      },
      plugins: [ChartDataLabels]
    });
    console.log(initialRound.averageProgressPreSmart)
    const avgProgressCtx = document.getElementById('avgprogress').getContext('2d');
    const avgProgressChart = new Chart(avgProgressCtx, {
      type: 'bar',
      data: {
        labels: Object.keys(initialRound.averageProgressPreSmart),
        datasets: [{
          label: 'ค่าเฉลี่ยของความคืบหน้า (%)',
          data: Object.values(initialRound.averageProgressPreSmart),
          backgroundColor: '#00f0d8'
        }]
      },
      options: {
        scales: {
          x: { stacked: true },
          y: {
            beginAtZero: true,
            max: 100,
            ticks: { callback: value => `${value}%` }
          }
        },
        plugins: {
          legend: { display: true, position: 'bottom' },
          tooltip: {
            callbacks: { label: tooltipItem => `${tooltipItem.dataset.label}: ${tooltipItem.raw}%` }
          },
          datalabels: {
            display: true,
            color: '#000',
            font: { weight: 'bold' },
            formatter: (value, context) => value === 0 ? null : `${value}%`
          }
        }
      },
      plugins: [ChartDataLabels]
    });
  </script>
</body>
</html>
