<!DOCTYPE html>
<html lang="en">

<head>
  <% include('../include/ad-head.ejs') %>
    <title>Admin - <%= pageTitle %>
    </title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+Thai:wdth,wght@62.5..100,100..900&display=swap"
      rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-chart-treemap"></script>

    <style>
      .card {
        background: #fff;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 24px;
      }

      .section-title {
        font-size: 1.25rem;
        font-weight: normal;
        margin-bottom: 16px;
      }

      .chart-container {
        width: 100%;
        height: 300px;
        /* Increase height for better visualization */
        display: flex;
        justify-content: center;
        align-items: center;
        position: relative;
      }

      .chart-center-text {
        position: absolute;
        font-size: 1.5em;
        font-weight: bold;
        color: #000;
      }
    </style>
</head>
<style>
  #spinner-container {
    display: flex;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.9);
    z-index: 9999;
    overflow: hidden;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  #static-image {
    width: 300px;
    height: auto;
    margin-bottom: 20px;
  }

  #progress-bar-container {
    width: 80%;
    background-color: #f3f3f3;
    border-radius: 25px;
    overflow: hidden;
  }

  #progress-bar {
    height: 20px;
    width: 0%;
    background-color: #3498db;
    transition: width 0.4s ease;
  }
</style>

<body class="bg-teal-500">

  <div id="spinner-container">
    <img id="static-image" src="/img/favi.png" alt="Loading...">
    <div id="progress-bar-container">
      <div id="progress-bar"></div>
    </div>
  </div>





  <%- include('../include/ad-navbar.ejs') %>



    <div class="container mx-auto p-6 bg-white mt-6 rounded-lg shadow-lg">
      <div class="flex flex-col lg:flex-row lg:space-x-6">
        <div class="lg:w-1/2">
          <h1 class="text-3xl font-medium mb-4">ข้อมูลเมือง <%= cityData.cityName %>
          </h1>
          <p class="text-xl mb-2">จังหวัด : <%= cityData.province %>
          </p>
          <p class="text-xl mb-2">ผู้พัฒนา : <%= cityData.developer %>
          </p>
          <p class="text-xl mb-2">ผู้บริหาร : <%= cityData.executive %>
          </p>
          <div class="flex justify-start space-x-4 mt-6">
            <button class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" onclick="GoEditPage()">
              แก้ไขข้อมูลจังหวัด
            </button>
            <button class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded"
              onclick="GoAddSolution()">
              เพิ่ม Solution
            </button>
          </div>
        </div>
        <div class="lg:w-1/2 flex justify-center items-center">
          <img src="/cityPic/<%= cityData.cityID %>.png">
        </div>
      </div>
      <div class="container mx-auto p-6 bg-gray-200 mt-5">
        <div class="card flex justify-between">
          <div>
            <h2 class="text-2xl font-bold mb-4">
              <%= cityData.cityName %>
            </h2>
            <p class="text-md mb-2">ได้รับตราสัญลักษณ: <%= cityData.date.toLocaleDateString('th-TH', { year: 'numeric' ,
                month: 'long' , day: 'numeric' , weekday: 'long' , }) %>
            </p>
            <p class="text-md mb-2">
              ประเภท: <%= new Date() - new Date(cityData.date) < 6 * 30 * 24 * 60 * 60 * 1000 ? 'เมืองใหม่'
                : 'เมืองเก่า' %>
            </p>
          </div>


          <div class="w-full max-w-xs  ">
            <label for="">เลือกรอบการติดตาม</label>
            <select id="round" onchange="changeRound(this.value)"
              class="block w-full px-3 py-2 border border-gray-300 bg-white rounded-md shadow-sm focus:outline-none focus:ring focus:ring-indigo-200 focus:border-indigo-500">
            </select>
          </div>

        </div>
        <!-- Dashboard -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
          <!-- บริการเมืองอัจฉริยะ -->
          <% const initialRound=JSON.parse(rounded)[Object.keys(JSON.parse(rounded)).length]; %>
            <div class="card lg:col-span-1">
              <h3 class="section-title">บริการเมืองอัจฉริยะ : <span style="color: #2c7f97;">
                  <%= Object.keys(initialRound.smartkeycount).length-1 %>
                </span>
                Smarts <br />จำนวนโครงการ : <span style="color: #d0a519;">
                  <%= initialRound.count-4 %>
                </span> โครงการ</h3>
              <div class="grid grid-cols-4 gap-4 ">
                <div
                  class="flex  items-center justify-center space-x-2 flex-col border-[1px] rounded-md border-inherit border-solid py-2<%= initialRound.smartkeycount.ENV ? '' : 'grayscale opacity-50' %>">
                  <img src="/img/lo01.png" alt="ENV Image" style="width: 70px; height: 70px;">
                  <span class="font-normal mt-2">ENV (<%= initialRound.smartkeycount.ENV ?? '0' %>)</span>
                </div>
                <div
                  class="flex items-center justify-center space-x-2 flex-col border-[1px] rounded-md border-inherit border-solid py-2 <%= initialRound.smartkeycount.ENE ? '' : 'grayscale opacity-50' %>">
                  <img src="/img/lo04.png" alt="ENE Image" style="width: 70px; height: 70px;">
                  <span class="font-normal mt-2">ENE (<%= initialRound.smartkeycount.ENE ?? '0' %>)</span>
                </div>
                <div
                  class="flex items-center justify-center space-x-2 flex-col border-[1px] rounded-md border-inherit border-solid py-2 <%= initialRound.smartkeycount.ECO ? '' : 'grayscale opacity-50' %>">
                  <img src="/img/lo05.png" alt="ECO Image" style="width: 70px; height: 70px;">
                  <span class="font-normal mt-2">ECO (<%= initialRound.smartkeycount.ECO ?? '0' %>)</span>
                </div>
                <div
                  class="flex items-center justify-center space-x-2 flex-col border-[1px] rounded-md border-inherit border-solid py-2 <%= initialRound.smartkeycount.GOV ? '' : 'grayscale opacity-50' %>">
                  <img src="/img/lo02.png" alt="GOV Image" style="width: 70px; height: 70px;">
                  <span class="font-normal mt-2">GOV (<%= initialRound.smartkeycount.GOV ?? '0' %>)</span>
                </div>
                <div
                  class="flex items-center justify-center space-x-2 flex-col border-[1px] rounded-md border-inherit border-solid py-2 <%= initialRound.smartkeycount.LIV ? '' : 'grayscale opacity-50' %>">
                  <img src="/img/lo06.png" alt="LIV Image" style="width: 70px; height: 70px;">
                  <span class="font-normal mt-2">LIV (<%= initialRound.smartkeycount.LIV ?? '0' %>)</span>
                </div>
                <div
                  class="flex items-center justify-center space-x-2 flex-col border-[1px] rounded-md border-inherit border-solid py-2 <%= initialRound.smartkeycount.PEO ? '' : 'grayscale opacity-50' %>">
                  <img src="/img/lo07.png" alt="PEO Image" style="width: 70px; height: 70px;">
                  <span class="font-normal mt-2">PEO (<%= initialRound.smartkeycount.PEO ?? '0' %>)</span>
                </div>
                <div
                  class="flex items-center justify-center space-x-2 flex-col border-[1px] rounded-md border-inherit border-solid py-2 <%= initialRound.smartkeycount.MOB ? '' : 'grayscale opacity-50' %>">
                  <img src="/img/lo03.png" alt="MOB Image" style="width: 70px; height: 70px;">
                  <span class="font-normal mt-2">MOB (<%= initialRound.smartkeycount.MOB ?? '0' %>)</span>
                </div>
                <div class="col-span-4 w-full ">
                  <!-- problem -->
                  <div class="w-full">
                    <h3 class="section-title" style="text-align: center;">ปัญหาและอุปสรรค</h3>
                    <div class="chart-container w-full">
                      <canvas id="problemsChart"  class="w-full"></canvas>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <!-- กราฟ  -->
            <div class="card lg:col-span-2">
              <div class="grid grid-cols-2 gap-4">
                <!-- ความคืบหน้าโครงการ -->
                <div class="text-center ">
                  <h3 class="section-title ">ความคืบหน้าของโครงการตามแผน</h3>
                  <div class="chart-container ">
                    <canvas id="progressChart"></canvas>
                  </div>
                  <div class="chart-container">
                    <canvas id="avgprogress"></canvas>
                  </div>
                </div>
                <!-- ค่าเฉลี่ยความสำเร็จ -->
                <div class="text-center">
                  <h3 class="section-title">ค่าเฉลี่ย % ความสำเร็จของ</h3>
                  <div class="chart-container">
                    <canvas id="successChart"></canvas>
                  </div>
                  <div class="chart-container">
                    <canvas id="stackedBarChart"></canvas>
                  </div>
                </div>

              </div>
              

            </div>
        </div>

        <!-- โครงการที่สำเร็จ -->
        <div class="card">
          <h3 class="section-title">โครงการที่สำเร็จ</h3>
          <ul class="list-disc pl-5 space-y-2">
            <% initialRound.complete.forEach(item=> { %>
              <li>
                <%= item %>
              </li>
              <% }) %>
          </ul>
        </div>
      </div>
      <div class="mt-6">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-yellow-300">
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-900 uppercase tracking-wider">โครงสร้าง /
                Smart</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-900 uppercase tracking-wider">Project</th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-900 uppercase tracking-wider">Actions</th>
            </tr>
          </thead>
          <tbody class="bg-white divide-y divide-gray-200">
            <% solution.forEach((smartItem, index)=> { %>
              <tr class="hover:bg-gray-50">
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-gray-900">
                    <%= smartItem.smart==='City Data Platform' ? smartItem.smart : 'smart ' + smartItem.smart %>
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm text-blue-500">
                    <a href="/admin/kpi/<%=smartItem.solutionID%>">
                      <%= smartItem.solutionName %>
                    </a>
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="flex space-x-2">
                    <a href="/admin/kpi/<%=smartItem.solutionID%>"
                      class="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-700">แก้ไข KPI</a>
                    <a href="/admin/solution/edit/<%=smartItem.solutionID %>"
                      class="bg-yellow-300 text-gray-900 px-4 py-2 rounded hover:bg-yellow-500">แก้ไข Solution</a>
                    <a href="/admin/solution/delete/<%=smartItem.solutionID %>/<%=smartItem.cityID %>"
                      class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-500">ลบ</a>
                  </div>
                </td>
              </tr>
              <% }); %>
          </tbody>
        </table>

      </div>
    </div>

    <%- include('../include/ad-footer.ejs') %>




</body>

<script>
 
</script>

<script>
  function GoEditPage() {
    const cityID = "<%= cityData.cityID %>";
    window.location.href = `/admin/city/edit/${cityID}`;
  }

  function GoAddSolution() {
    const cityID = "<%= cityData.cityID %>";
    window.location.href = `/admin/solution/add/${cityID}`;
  }
  function handleSearch() {
    const searchText = document.getElementById("searchInput").value.toLowerCase();
    const rows = document.querySelectorAll("table tbody tr");
    rows.forEach((row) => {
      const cells = row.querySelectorAll("td");
      let found = false;
      cells.forEach((cell) => {
        if (cell.textContent.toLowerCase().includes(searchText)) {
          found = true;
        }
      });
      row.style.display = found ? "" : "none";
    });
  }
  document.getElementById("searchInput").addEventListener("keyup", function() {
    handleSearch();
  });
</script>

<script>
  

  const rounded = <%- rounded %>;

  let currentRound = Object.keys(rounded).length;
  let initialRound = rounded[currentRound];
  document.getElementById('round').innerHTML = 'รอบที่ : ' + (Object.keys(rounded).length)


  // กราฟความคืบหน้าโครงการ
  const progressCtx = document.getElementById('progressChart').getContext('2d');
  const progressChart = new Chart(progressCtx, {
    type: 'doughnut',
    data: {
      labels: ['ยังไม่ดำเนินการ', 'ดำเนินการแล้ว'],
      datasets: [{
        data: [100 - initialRound.progress, initialRound.progress],
        // data: [1, 99],
        backgroundColor: ['#eeeeee', 'red'],
        borderWidth: 6,
        borderColor: '#ffffff'
      }]
    },
    options: {
      plugins: {
        datalabels: {
          formatter: (value, context) => context.dataIndex === 1 ? `${value}%` : '',
          color: '#fff',
          font: {
            weight: 'bold',
            size: 16
          },
          align: 'center',
          anchor: 'center'
        },
        tooltip: {
          callbacks: {
            label: tooltipItem => `${tooltipItem.label}: ${tooltipItem.raw}%`
          }
        }
      },
      centerText: {
        display: true,
        text: `${initialRound.progress}%`
      },
      cutout: '50%',
      maintainAspectRatio: false,
    },
    plugins: [{
      id: 'centerText',
      beforeDraw: chart => {
        if (chart.options.centerText.display) {
          const ctx = chart.ctx;
          const centerConfig = chart.options.centerText;
          const fontSize = (chart.height / 180).toFixed(2);
          ctx.font = `bold ${fontSize}em sans-serif`;
          ctx.textBaseline = 'middle';
          const text = centerConfig.text;
          const textX = Math.round((chart.width - ctx.measureText(text).width) / 2);
          const textY = chart.height / 2;
          ctx.fillStyle = '#000';
          ctx.fillText(text, textX, textY);
        }
      }
    }]
  });


  document.addEventListener("DOMContentLoaded", (event) => {
      const progressBar = document.getElementById('progress-bar');
      let width = 0;
      const interval = setInterval(() => {
          if (width >= 100) {
              clearInterval(interval);
          } else {
              width += 1;
              progressBar.style.width = width + '%';
          }
      }, 50); // Increase the progress every 50ms
  });

  window.onload = function() {
      document.getElementById('spinner-container').style.display = 'none';
  };

  // กราฟค่าเฉลี่ยความสำเร็จ
  const successCtx = document.getElementById('successChart').getContext('2d');
  const totalProjects = initialRound.count;
  const successProjects = initialRound.success.reduce((a, b) => a + b, 0);
  const unsuccessfulProjects = totalProjects - successProjects;

  const successChart = new Chart(successCtx, {
    type: 'doughnut',
    data: {
      labels: ['ยังไม่สำเร็จ', 'สำเร็จแล้ว'],
      datasets: [{
        data: [(unsuccessfulProjects / totalProjects) * 100, (successProjects / totalProjects) * 100],
        backgroundColor: ['#eeeeee', '#FFCE56'],
        borderWidth: 6,
        borderColor: '#ffffff'
      }]
    },
    options: {
      plugins: {
        datalabels: {
          formatter: (value) => `${value.toFixed(0)}%`,
          color: '#fff',
          font: {
            weight: 'bold'
          }
        },
        tooltip: {
          callbacks: {
            label: (tooltipItem) => `${tooltipItem.label}: ${tooltipItem.raw.toFixed(0)}%`
          }
        }
      },
      cutout: '50%',
      maintainAspectRatio: false,
      centerText: {
        display: true,
        text: `${((successProjects / totalProjects) * 100).toFixed(0)}%`
      }
    },
    plugins: [{
      id: 'centerText',
      beforeDraw: (chart) => {
        if (chart.options.centerText.display) {
          const ctx = chart.ctx;
          const centerConfig = chart.options.centerText;
          const fontSize = (chart.height / 180).toFixed(2);
          ctx.font = `bold ${fontSize}em sans-serif`;
          ctx.textBaseline = 'middle';
          const text = centerConfig.text;
          const textX = Math.round((chart.width - ctx.measureText(text).width) / 2);
          const textY = chart.height / 2;
          ctx.fillStyle = '#000';
          ctx.fillText(text, textX, textY);
        }
      }
    }]
  });



  const problemsCtx = document.getElementById('problemsChart').getContext('2d');
const problemData = initialRound.problem;

const problemsChart = new Chart(problemsCtx, {
type: 'bar',
data: {
  labels: problemData.map(p => p.problem),
  datasets: [{
    label: '% ของปัญหา',
    data: problemData.map(problem => problem.percentage),
    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56']
  }]
},
options: {
  indexAxis: 'y', // This makes the bar chart horizontal
  plugins: {
    legend: {
      display: false // This will hide the legend
    },
    datalabels: {
      display: false // This will hide the data labels
    }
  },
  scales: {
    x: {
      beginAtZero: true,
      max: 100,
      ticks: {
        callback: (value) => `${value}%`
      }
    }
  }
}
});



  const stackedBarCtx = document.getElementById('stackedBarChart').getContext('2d');
  const stackedBarChart = new Chart(stackedBarCtx, {
    type: 'bar',
    data: {
      labels: Object.keys(initialRound.smartkeycount),
      datasets: [{
          label: 'โครงการที่สำเร็จแล้ว',
          data: Object.values(initialRound.success),
          backgroundColor: '#FFCE56'
        },
        {
          label: 'โครงการที่ยังไม่สำเร็จ',
          data: Object.values(initialRound.unsuccess),
          backgroundColor: '#cccccc'
        }
      ]
    },
    options: {
      scales: {
        x: {
          stacked: true
        },
        y: {
          stacked: true,
          beginAtZero: true
        }
      },
      plugins: {
        legend: {
          display: true,
          position: 'bottom'
        },
        tooltip: {
          callbacks: {
            label: tooltipItem => `${tooltipItem.dataset.label}: ${tooltipItem.raw}`
          }
        },
        datalabels: {
          display: true,
          color: '#000',
          font: {
            weight: 'bold'
          },
          formatter: (value, context) => value === 0 ? null : value
        }
      }
    },
    plugins: [ChartDataLabels]
  });
  // console.log(initialRound.averageProgressPerSmart)
  
 //treemap
 const avgProgressCtx = document.getElementById('avgprogress').getContext('2d');

const entries = Object.entries(initialRound.averageProgressPerSmart);

// จัดเรียงอาร์เรย์ตามค่า value
const sortedEntries = entries.sort((a, b) => b[1] - a[1]);

// แปลงอาร์เรย์ที่จัดเรียงแล้วกลับเป็นวัตถุ (ถ้าต้องการ)
const sortedObject = Object.fromEntries(sortedEntries);

const labels = Object.keys(sortedObject);
const data = Object.values(sortedObject);
const treemapData = labels.map((label, index) => (
{
v: data[index],
label: label,

}));

function colorFromValue(value, border) {
      var alpha = value / 100;
      var color = "red";
      if (border) {
          alpha += 0.1;
        }
      return Chart.helpers.color(color)
          .alpha(alpha)
          .rgbString();
  }


const avgProgressChart = new Chart(avgProgressCtx, {
type: 'treemap',
data: {
  datasets: [
    {
      label: "ความคืบหน้าโครงการตามแผน",
      data: data,
      backgroundColor: function (ctx) {
                      return colorFromValue(ctx.dataset.data[ctx.dataIndex].v);
                  },
      borderColor: function (ctx) {
                      return colorFromValue(ctx.dataset.data[ctx.dataIndex].v, true);
                  },
      borderWidth: 2,
      spacing: 0.1,
    },
  ],
},
options: {
  plugins: {
    datalabels: {
      formatter: (value, context) => labels[context.dataIndex],
      color: '#000',
      align: 'center',
      anchor: 'center',
      font: {
        weight: 'bold',
        size: 14,
      },
    },
    tooltip: {
      callbacks: {
        label: (context) => `ค่าเฉลี่ยความสำเร็จ: ${context.raw.v}%`,
      },
    },
  },
  maintainAspectRatio: false,
  title: {
    display: true,
    text: 'Basic Treemap Sample',
  },
  legend: {
    display: false,
  },
},
plugins: [ChartDataLabels],
});

</script>



<script>
  document.addEventListener('DOMContentLoaded', function() {
    const roundSelect = document.getElementById('round');
    const numRounds = Object.keys(rounded).length;

    // สร้าง options สำหรับ dropdown
    for (let i = 1; i <= numRounds; i++) {
      const option = document.createElement('option');
      option.value = i;
      option.text = `รอบที่ ${i}`;
      roundSelect.appendChild(option);
    }

    // ตั้งค่าให้ dropdown เลือกค่าปัจจุบัน
    roundSelect.value = currentRound;
  });

  function changeRound(selectedRound) {
    currentRound = parseInt(selectedRound);
    if (currentRound < 1) currentRound = 1;
    if (currentRound > Object.keys(rounded).length) currentRound = Object.keys(rounded).length;
    initialRound = rounded[currentRound];

    // Update the progress chart
    progressChart.data.datasets[0].data = [100 - initialRound.progress, initialRound.progress];
    progressChart.options.centerText.text = `${initialRound.progress}%`;
    progressChart.update();

    // Update the success chart
    const totalProjects = initialRound.count;
    const successProjects = initialRound.success.reduce((a, b) => a + b, 0);
    const unsuccessfulProjects = totalProjects - successProjects;
    successChart.data.datasets[0].data = [(unsuccessfulProjects / totalProjects) * 100, (successProjects / totalProjects) * 100];
    successChart.options.centerText.text = `${((successProjects / totalProjects) * 100).toFixed(0)}%`;
    successChart.update();

    // Update the problem chart
    problemsChart.data.labels = initialRound.problem.map(p => p.problem);
    problemsChart.data.datasets[0].data = initialRound.problem.map(problem => problem.percentage);
    problemsChart.update();

    // Update the stacked bar chart
    stackedBarChart.data.datasets[0].data = Object.values(initialRound.success);
    stackedBarChart.data.datasets[1].data = Object.values(initialRound.unsuccess);
    stackedBarChart.update();

    // Update the average progress chart (Treemap)
    const entries = Object.entries(initialRound.averageProgressPerSmart);
    const sortedEntries = entries.sort((a, b) => b[1] - a[1]);
    const sortedObject = Object.fromEntries(sortedEntries);

    const labels = Object.keys(sortedObject);
    const data = Object.values(sortedObject);
    avgProgressChart.data.datasets[0].data = labels.map((label, index) => (
    {
        v: data[index],
        label: label,
    }));

    avgProgressChart.update();
}

</script>
</html>